# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-16 11:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('people', '0001_initial'),
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Halls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hall_name', models.CharField(max_length=400, verbose_name='Названия зала')),
                ('hall_footage', models.DecimalField(decimal_places=2, default=0.0, max_digits=1000, verbose_name='Метраж Зала(квадратные метры)')),
                ('hall_people_quantity_banquet', models.IntegerField(default=0, verbose_name='Банкет')),
                ('hall_people_quantity_buffet', models.IntegerField(default=0, verbose_name='Фуршет')),
                ('hall_year_round_check', models.NullBooleanField(verbose_name='Круглогодично')),
                ('hall_year_round_field', models.CharField(max_length=200, verbose_name='Круглогодично')),
            ],
            options={
                'verbose_name': 'Зал',
                'verbose_name_plural': 'Залы',
            },
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_name', models.CharField(max_length=200, verbose_name='Название площадки')),
                ('place_site', models.URLField(default='https://', max_length=300, verbose_name='Сайт площадки')),
                ('place_instagram', models.URLField(default='https://www.instagram.com/', max_length=300, verbose_name='Инстаграм')),
                ('place_is_in_moscow', models.BooleanField(default=False, verbose_name='Москва')),
                ('place_in_moscow_region', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Московская область')),
                ('place_in_regions', models.CharField(blank=True, default=None, max_length=150, null=True, verbose_name='Регионы')),
                ('place_nearest_undeground', models.CharField(max_length=150, verbose_name='Ближайшее метро')),
                ('place_region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Область')),
                ('place_city', models.CharField(max_length=100, verbose_name='Город')),
                ('place_locality', models.CharField(blank=True, max_length=150, null=True, verbose_name='Населённый пункт')),
                ('place_street', models.CharField(max_length=150, verbose_name='Улица')),
                ('place_house_num', models.DecimalField(decimal_places=0, default=0, max_digits=500, verbose_name='Дом')),
                ('place_house_case', models.CharField(max_length=8, verbose_name='Корпус')),
                ('place_house_entrance', models.DecimalField(decimal_places=0, default=0, max_digits=1000, verbose_name='Подъезд')),
                ('place_floor', models.DecimalField(decimal_places=0, default=0, max_digits=100, verbose_name='Этаж')),
                ('place_office', models.CharField(max_length=150, verbose_name='Офис')),
                ('place_address_note', models.TextField(max_length=450, verbose_name='Примечание')),
                ('place_from_recommendation', models.CharField(default=None, max_length=150, null=True, verbose_name='По рекомендации')),
                ('place_from_internet', models.CharField(default=None, max_length=150, null=True, verbose_name='Из интернета')),
                ('place_from_event', models.CharField(default=None, max_length=150, null=True, verbose_name='С мероприятия')),
                ('place_cooperated', models.NullBooleanField(default=False, verbose_name='Работали с ним или нет')),
                ('monday_to_tuesday', models.CharField(max_length=100, verbose_name='Понедельник - четверг')),
                ('friday', models.CharField(max_length=100, verbose_name='Пятница')),
                ('sunday', models.CharField(max_length=100, verbose_name='Суббота')),
                ('saturday', models.CharField(max_length=100, verbose_name='Воскресенье')),
                ('accommodation_services', models.TextField(max_length=400, verbose_name='Что входит в Стоимость проживания')),
                ('accommodation_discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=1000, verbose_name='Скидка на проживание(%/руб)')),
                ('place_food_cost_banquet', models.DecimalField(decimal_places=0, default=0, max_digits=1000, verbose_name='Банкета')),
                ('place_food_cost_buffet', models.DecimalField(decimal_places=0, default=0, max_digits=1000, verbose_name='Фуршета')),
                ('is_kitchen', models.NullBooleanField(default=False, verbose_name='Собственная кухня')),
                ('is_catering', models.NullBooleanField(default=False, verbose_name='Можно-ли использовать свой кейтеринг')),
                ('cork_fee', models.NullBooleanField(default=False, verbose_name='Пробковый сбор')),
                ('cork_fee_note_yes', models.TextField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Да"')),
                ('cork_fee_note_no', models.TextField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Нет"')),
                ('alcohol', models.NullBooleanField(default=False, verbose_name='Свой Алкоголь')),
                ('alcohol_note_yes', models.TextField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Да"')),
                ('alcohol_note_no', models.TextField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Нет"')),
                ('dance_hall', models.CharField(choices=[('Да', 'Да'), ('Нет', 'нет'), ('Можно установить', 'Можно установить')], default='Нет', max_length=20, verbose_name='Танцевальный зал')),
                ('scene', models.CharField(choices=[('Да', 'Да'), ('Нет', 'нет'), ('Можно установить', 'Можно установить')], default='Нет', max_length=20, verbose_name='Сцена')),
                ('sound', models.CharField(choices=[('Да', 'Да'), ('Нет', 'нет'), ('Можно установить', 'Можно установить')], default='Нет', max_length=20, verbose_name='Звук')),
                ('sound_note_yes', models.CharField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Да"')),
                ('sound_note_no', models.CharField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Нет"')),
                ('sound_note_perhaps', models.CharField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Можно установить"')),
                ('light', models.CharField(choices=[('Да', 'Да'), ('Нет', 'нет'), ('Можно установить', 'Можно установить')], default='Нет', max_length=20, verbose_name='Свет')),
                ('light_note_yes', models.TextField(blank=True, max_length=300, null=True, verbose_name='Примечание к "Да"')),
                ('light_note_no', models.TextField(blank=True, max_length=300, null=True, verbose_name='Примечание к "Нет"')),
                ('light_note_perhaps', models.TextField(blank=True, max_length=300, null=True, verbose_name='Примечание к "Можно установить"')),
                ('technical_support', models.CharField(max_length=300, verbose_name='Техническое сопровождение входящее в стоимость')),
                ('additional_possibilities', models.CharField(max_length=400, verbose_name='Дополнительные возможности')),
                ('toilets_stationary', models.NullBooleanField(default=False, verbose_name='Стационарные туалеты')),
                ('toilets_stationary_quantity', models.IntegerField(default=0, verbose_name='Колличество стационарных туалетов')),
                ('toilets_mobility', models.CharField(choices=[('Да', 'Да'), ('Нет', 'нет'), ('Можно установить', 'Можно установить')], default='Нет', max_length=20, verbose_name='Мобилные туалеты')),
                ('toilets_mobility_quantity', models.IntegerField(default=0, verbose_name='Колличество мобилных туалетов')),
                ('toilets_mobility_no', models.CharField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Нет"')),
                ('toilets_mobility_perhaps', models.CharField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Можно установить"')),
                ('parking_security', models.NullBooleanField(default=False, verbose_name='Охраняемая парковка')),
                ('parking_security_quantity', models.IntegerField(default=0, verbose_name='Колличество парковок на территории')),
                ('parking_security_no', models.CharField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Нет"')),
                ('parking_security_is_cost', models.NullBooleanField(default=False, verbose_name='Есть стоимость парковки')),
                ('parking_security_cost', models.IntegerField(default=0, verbose_name='Стоимость парковки')),
                ('parking_security_cost_no', models.CharField(blank=True, max_length=400, null=True, verbose_name='Примечание к "Нет" ')),
                ('parking_security_quantity_places', models.IntegerField(default=0, verbose_name='Колличество парковачных мест')),
                ('place_prepayment', models.CharField(max_length=50, verbose_name='Предоплата')),
                ('place_prepayment_order', models.TextField(max_length=100, verbose_name='Порядок предоплаты')),
                ('place_agency_payment', models.IntegerField(default=0, verbose_name='Агентские %')),
                ('place_contact_person', models.CharField(max_length=150, verbose_name='Имя контактного лица')),
                ('place_contact_person_phone', phonenumber_field.modelfields.PhoneNumberField(default='+7', max_length=24, verbose_name='Телефон контактного лица')),
                ('place_contact_person_email', models.EmailField(max_length=120, verbose_name='Электронная почта')),
                ('place_stage_negotiations_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('place_agreement', models.TextField(max_length=400, verbose_name='Результат договорённости')),
                ('place_date_meeting', models.DateTimeField(verbose_name='Дата и время следующего контакта/Встречи')),
                ('place_stage_negotiations_note', models.TextField(max_length=400, verbose_name='Примечание')),
                ('halls', models.ManyToManyField(to='places.Halls', verbose_name='Залы')),
                ('place_event_type', models.ManyToManyField(to='app.EventTypes', verbose_name='Тип мероприятия')),
                ('place_manager_name', models.ManyToManyField(to='people.Employers', verbose_name='Имя Менеджера')),
                ('place_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.PlaceTypes', verbose_name='Тип площадки')),
                ('place_сontractors', models.ManyToManyField(to='people.Contractors', verbose_name='Подрядчики')),
            ],
            options={
                'verbose_name': 'Площадка',
                'verbose_name_plural': 'Площадки',
            },
        ),
    ]
